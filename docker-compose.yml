version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: rehearsal-scheduler-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-rehearsal_scheduler}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-api
    restart: always
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-rehearsal_scheduler}
      JWT_SECRET: ${JWT_SECRET:-changeThisToSecureSecret}
      JWT_EXPIRE: 30d
    ports:
      - "5000:5000"
    networks:
      - app-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-client
    restart: always
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: